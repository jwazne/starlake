
connections {

}
jdbcEngines {
  bigquery {
    tables = {
      extract {
        createSql = """CREATE TABLE IF NOT EXISTS SL_LAST_EXPORT (
                              DOMAIN VARCHAR(255) NOT NULL,
                              SCHEMA VARCHAR(255) NOT NULL,
                              LAST_TS TIMESTAMP,
                              LAST_DATE DATE,
                              LAST_LONG INTEGER,
                              LAST_DECIMAL DECIMAL,
                              START_TS TIMESTAMP NOT NULL,
                              END_TS TIMESTAMP NOT NULL,
                              DURATION INTEGER NOT NULL,
                              MODE VARCHAR(255) NOT NULL,
                              COUNT BIGINT NOT NULL,
                              SUCCESS BOOLEAN NOT NULL,
                              MESSAGE VARCHAR(255) NOT NULL,
                              STEP VARCHAR(255) NOT NULL
                             )
    """
      },
      audit {
        selectSql = """
          SELECT
            '{{jobid}}' AS JOBID,
            '{{paths}}' AS PATHS,
            '{{domain}}' AS DOMAIN,
            '{{schema}}' AS SCHEMA,
            {{success}} AS SUCCESS,
            {{count}} AS COUNT,
            {{countAccepted}} AS COUNTACCEPTED,
            {{countRejected}} AS COUNTREJECTED,
            TIMESTAMP('{{timestamp}}') AS TIMESTAMP,
            {{duration}} AS DURATION,
            '{{message}}' AS MESSAGE,
            '{{step}}' AS STEP,
            '{{database}}' AS DATABASE,
            '{{tenant}}' AS TENANT
        """
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                              JOBID VARCHAR(255) NOT NULL,
                              PATHS VARCHAR(5000) NOT NULL,
                              DOMAIN VARCHAR(255) NOT NULL,
                              SCHEMA VARCHAR(255) NOT NULL,
                              SUCCESS BOOLEAN NOT NULL,
                              COUNT BIGINT NOT NULL,
                              COUNTACCEPTED BIGINT NOT NULL,
                              COUNTREJECTED BIGINT NOT NULL,
                              TIMESTAMP TIMESTAMP NOT NULL,
                              DURATION INTEGER NOT NULL,
                              MESSAGE VARCHAR(255) NOT NULL,
                              STEP VARCHAR(255) NOT NULL,
                              DATABASE VARCHAR(255) NULL,
                              TENANT VARCHAR(255) NULL
                             )
    """
      },
      expectations {
        selectSql = """
          SELECT
            '{{jobid}}' AS JOBID,
            '{{database}}' AS DATABASE,
            '{{domain}}' AS DOMAIN,
            '{{schema}}' AS SCHEMA,
            TIMESTAMP('{{timestamp}}') AS TIMESTAMP,
            '{{NAME}}' AS NAME,
            '{{PARAMS}}' AS PARAMS,
            '{{SQL}}' AS SQL,
            {{count}} AS COUNT,
            '{{EXCEPTION}}' AS EXCEPTION,
            {{success}} AS SUCCESS
        """
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                            JOBID VARCHAR(255) NOT NULL,
                            DATABASE VARCHAR(255) NULL,
                            DOMAIN VARCHAR(255) NOT NULL,
                            SCHEMA VARCHAR(255) NOT NULL,
                            TIMESTAMP TIMESTAMP NOT NULL,
                            NAME VARCHAR(255) NOT NULL,
                            PARAMS VARCHAR(255) NOT NULL,
                            SQL VARCHAR(255) NOT NULL,
                            COUNT BIGINT NOT NULL,
                            EXCEPTION VARCHAR(255) NOT NULL,
                            SUCCESS BOOLEAN NOT NULL
                          )
        """
      },
      rejected {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                              JOBID VARCHAR(255) NOT NULL,
                              TIMESTAMP TIMESTAMP NOT NULL,
                              DOMAIN VARCHAR(255) NOT NULL,
                              SCHEMA VARCHAR(255) NOT NULL,
                              ERROR VARCHAR(255) NOT NULL,
                              PATH VARCHAR(255) NOT NULL
                             )
    """
      },
      frequencies {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE VARCHAR(255) NOT NULL,
            CATEGORY TEXT NULL,
            COUNT BIGINT NOT NULL,
            FREQUENCY DOUBLE PRECISION NULL,
            JOBID VARCHAR(255) NOT NULL,
            DOMAIN VARCHAR(255) NOT NULL,
            SCHEMA VARCHAR(255) NOT NULL,
            TIMESTAMP BIGINT NOT NULL
        )
        """
      },
      continuous {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE VARCHAR(255) NOT NULL,
            MIN DOUBLE PRECISION NULL,
            MAX DOUBLE PRECISION NULL,
            MEAN DOUBLE PRECISION NULL,
            MISSINGVALUES BIGINT NULL,
            VARIANCE DOUBLE PRECISION NULL,
            STANDARDDEV DOUBLE PRECISION NULL,
            SUM DOUBLE PRECISION NULL,
            SKEWNESS DOUBLE PRECISION NULL,
            KURTOSIS DOUBLE PRECISION NULL,
            PERCENTILE25 DOUBLE PRECISION NULL,
            MEDIAN DOUBLE PRECISION NULL,
            PERCENTILE75 DOUBLE PRECISION NULL,
            COMETMETRIC VARCHAR(255) NOT NULL,
            JOBID VARCHAR(255) NOT NULL,
            DOMAIN VARCHAR(255) NOT NULL,
            SCHEMA VARCHAR(255) NOT NULL,
            COUNT BIGINT NOT NULL,
            TIMESTAMP BIGINT NOT NULL
        )
        """
      },
      discrete {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE VARCHAR(255) NOT NULL,
            COUNTDISTINCT BIGINT NULL,
            MISSINGVALUESDISCRETE BIGINT NULL,
            COMETMETRIC VARCHAR(255) NOT NULL,
            JOBID VARCHAR(255) NOT NULL,
            DOMAIN VARCHAR(255) NOT NULL,
            SCHEMA VARCHAR(255) NOT NULL,
            COUNT BIGINT NOT NULL,
            TIMESTAMP BIGINT NOT NULL
        )
        """
      }
    }
  }
  h2 {
    tables = {
      extract {
        createSql = """CREATE TABLE IF NOT EXISTS SL_LAST_EXPORT (
                              DOMAIN VARCHAR(255) NOT NULL,
                              SCHEMA VARCHAR(255) NOT NULL,
                              LAST_TS TIMESTAMP,
                              LAST_DATE DATE,
                              LAST_LONG INTEGER,
                              LAST_DECIMAL DECIMAL,
                              START_TS TIMESTAMP NOT NULL,
                              END_TS TIMESTAMP NOT NULL,
                              DURATION INTEGER NOT NULL,
                              MODE VARCHAR(255) NOT NULL,
                              COUNT BIGINT NOT NULL,
                              SUCCESS BOOLEAN NOT NULL,
                              MESSAGE VARCHAR(255) NOT NULL,
                              STEP VARCHAR(255) NOT NULL
                             )
    """
      },
      audit {
        selectSql = """
          SELECT
            '{{jobid}}' AS JOBID,
            '{{paths}}' AS PATHS,
            '{{domain}}' AS DOMAIN,
            '{{schema}}' AS SCHEMA,
            {{success}} AS SUCCESS,
            {{count}} AS COUNT,
            {{countAccepted}} AS COUNTACCEPTED,
            {{countRejected}} AS COUNTREJECTED,
            TS '{{timestamp}}' AS TIMESTAMP,
            {{duration}} AS DURATION,
            '{{message}}' AS MESSAGE,
            '{{step}}' AS STEP,
            '{{database}}' AS DATABASE,
            '{{tenant}}' AS TENANT
        """
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                              JOBID VARCHAR(255) NOT NULL,
                              PATHS VARCHAR(5000) NOT NULL,
                              DOMAIN VARCHAR(255) NOT NULL,
                              SCHEMA VARCHAR(255) NOT NULL,
                              SUCCESS BOOLEAN NOT NULL,
                              COUNT BIGINT NOT NULL,
                              COUNTACCEPTED BIGINT NOT NULL,
                              COUNTREJECTED BIGINT NOT NULL,
                              TIMESTAMP TIMESTAMP NOT NULL,
                              DURATION INTEGER NOT NULL,
                              MESSAGE VARCHAR(255) NOT NULL,
                              STEP VARCHAR(255) NOT NULL,
                              DATABASE VARCHAR(255) NULL,
                              TENANT VARCHAR(255) NULL
                             )
    """
      },
      expectations {
        selectSql = """
          SELECT
            '{{jobid}}' AS JOBID,
            '{{database}}' AS DATABASE,
            '{{domain}}' AS DOMAIN,
            '{{schema}}' AS SCHEMA,
             TS '{{timestamp}}' AS TIMESTAMP,
            '{{NAME}}' AS NAME,
            '{{PARAMS}}' AS PARAMS,
            '{{SQL}}' AS SQL,
            {{count}} AS COUNT,
            '{{EXCEPTION}}' AS EXCEPTION,
            {{success}} AS SUCCESS
        """
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                            JOBID VARCHAR(255) NOT NULL,
                            DATABASE VARCHAR(255) NULL,
                            DOMAIN VARCHAR(255) NOT NULL,
                            SCHEMA VARCHAR(255) NOT NULL,
                            TIMESTAMP TIMESTAMP NOT NULL,
                            NAME VARCHAR(255) NOT NULL,
                            PARAMS VARCHAR(255) NOT NULL,
                            SQL VARCHAR(255) NOT NULL,
                            COUNT BIGINT NOT NULL,
                            EXCEPTION VARCHAR(255) NOT NULL,
                            SUCCESS BOOLEAN NOT NULL
                          )
        """
      },
      rejected {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                              JOBID VARCHAR(255) NOT NULL,
                              TIMESTAMP TIMESTAMP NOT NULL,
                              DOMAIN VARCHAR(255) NOT NULL,
                              SCHEMA VARCHAR(255) NOT NULL,
                              ERROR VARCHAR(255) NOT NULL,
                              PATH VARCHAR(255) NOT NULL
                             )
    """
      },
      frequencies {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE VARCHAR(255) NOT NULL,
            CATEGORY TEXT NULL,
            COUNT BIGINT NOT NULL,
            FREQUENCY DOUBLE PRECISION NULL,
            JOBID VARCHAR(255) NOT NULL,
            DOMAIN VARCHAR(255) NOT NULL,
            SCHEMA VARCHAR(255) NOT NULL,
            TIMESTAMP BIGINT NOT NULL
        )
        """
      },
      continuous {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE VARCHAR(255) NOT NULL,
            MIN DOUBLE PRECISION NULL,
            MAX DOUBLE PRECISION NULL,
            MEAN DOUBLE PRECISION NULL,
            MISSINGVALUES BIGINT NULL,
            VARIANCE DOUBLE PRECISION NULL,
            STANDARDDEV DOUBLE PRECISION NULL,
            SUM DOUBLE PRECISION NULL,
            SKEWNESS DOUBLE PRECISION NULL,
            KURTOSIS DOUBLE PRECISION NULL,
            PERCENTILE25 DOUBLE PRECISION NULL,
            MEDIAN DOUBLE PRECISION NULL,
            PERCENTILE75 DOUBLE PRECISION NULL,
            COMETMETRIC VARCHAR(255) NOT NULL,
            JOBID VARCHAR(255) NOT NULL,
            DOMAIN VARCHAR(255) NOT NULL,
            SCHEMA VARCHAR(255) NOT NULL,
            COUNT BIGINT NOT NULL,
            TIMESTAMP BIGINT NOT NULL
        )
        """
      },
      discrete {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE VARCHAR(255) NOT NULL,
            COUNTDISTINCT BIGINT NULL,
            MISSINGVALUESDISCRETE BIGINT NULL,
            COMETMETRIC VARCHAR(255) NOT NULL,
            JOBID VARCHAR(255) NOT NULL,
            DOMAIN VARCHAR(255) NOT NULL,
            SCHEMA VARCHAR(255) NOT NULL,
            COUNT BIGINT NOT NULL,
            TIMESTAMP BIGINT NOT NULL
        )
        """
      }
    }
  }
  snowflake {
    tables = {
      extract {
        createSql = """CREATE TABLE IF NOT EXISTS SL_LAST_EXPORT (
                              DOMAIN VARCHAR(255) NOT NULL,
                              SCHEMA VARCHAR(255) NOT NULL,
                              LAST_TS TIMESTAMP,
                              LAST_DATE DATE,
                              LAST_LONG NUMERIC,
                              LAST_DECIMAL DECIMAL,
                              START_TS TIMESTAMP NOT NULL,
                              END_TS TIMESTAMP NOT NULL,
                              DURATION INTEGER NOT NULL,
                              MODE VARCHAR(255) NOT NULL,
                              COUNT BIGINT NOT NULL,
                              SUCCESS BOOLEAN NOT NULL,
                              MESSAGE VARCHAR(255) NOT NULL,
                              STEP VARCHAR(255) NOT NULL
                             )
    """
      },
      audit {
        selectSql = """
          SELECT
            '{{jobid}}' AS JOBID,
            '{{paths}}' AS PATHS,
            '{{domain}}' AS DOMAIN,
            '{{schema}}' AS SCHEMA,
            {{success}} AS SUCCESS,
            {{count}} AS COUNT,
            {{countAccepted}} AS COUNTACCEPTED,
            {{countRejected}} AS COUNTREJECTED,
            TO_TIMESTAMP('{{timestamp}}') AS TIMESTAMP,
            {{duration}} AS DURATION,
            '{{message}}' AS MESSAGE,
            '{{step}}' AS STEP,
            '{{database}}' AS DATABASE,
            '{{tenant}}' AS TENANT
        """
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                              JOBID VARCHAR(255) NOT NULL,
                              PATHS TEXT NOT NULL,
                              DOMAIN VARCHAR(255) NOT NULL,
                              SCHEMA VARCHAR(255) NOT NULL,
                              SUCCESS BOOLEAN NOT NULL,
                              COUNT BIGINT NOT NULL,
                              COUNTACCEPTED BIGINT NOT NULL,
                              COUNTREJECTED BIGINT NOT NULL,
                              TIMESTAMP TIMESTAMP NOT NULL,
                              DURATION INTEGER NOT NULL,
                              MESSAGE VARCHAR(255) NOT NULL,
                              STEP VARCHAR(255) NOT NULL,
                              DATABASE VARCHAR(255) NULL,
                              TENANT VARCHAR(255) NULL
                             )
    """
      },
      expectations {
        selectSql = """
          SELECT
            '{{jobid}}' AS JOBID,
            '{{database}}' AS DATABASE,
            '{{domain}}' AS DOMAIN,
            '{{schema}}' AS SCHEMA,
            TO_TIMESTAMP('{{timestamp}}') AS TIMESTAMP,
            '{{NAME}}' AS NAME,
            '{{PARAMS}}' AS PARAMS,
            '{{SQL}}' AS SQL,
            {{count}} AS COUNT,
            '{{EXCEPTION}}' AS EXCEPTION,
            {{success}} AS SUCCESS
        """
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                            JOBID VARCHAR(255) NOT NULL,
                            DATABASE VARCHAR(255) NULL,
                            DOMAIN VARCHAR(255) NOT NULL,
                            SCHEMA VARCHAR(255) NOT NULL,
                            TIMESTAMP TIMESTAMP NOT NULL,
                            NAME VARCHAR(255) NOT NULL,
                            PARAMS VARCHAR(255) NOT NULL,
                            SQL VARCHAR(255) NOT NULL,
                            COUNT BIGINT NOT NULL,
                            EXCEPTION VARCHAR(255) NOT NULL,
                            SUCCESS BOOLEAN NOT NULL
                          )
        """
      },
      rejected {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                              JOBID VARCHAR(255) NOT NULL,
                              TIMESTAMP TIMESTAMP NOT NULL,
                              DOMAIN VARCHAR(255) NOT NULL,
                              SCHEMA VARCHAR(255) NOT NULL,
                              ERROR TEXT NOT NULL,
                              PATH TEXT NOT NULL
                             )
    """
      },
      frequencies {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE VARCHAR(255) NOT NULL,
            CATEGORY TEXT NULL,
            COUNT BIGINT NOT NULL,
            FREQUENCY DOUBLE PRECISION NULL,
            JOBID VARCHAR(255) NOT NULL,
            DOMAIN VARCHAR(255) NOT NULL,
            SCHEMA VARCHAR(255) NOT NULL,
            TIMESTAMP BIGINT NOT NULL
        )
        """
      },
      continuous {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE VARCHAR(255) NOT NULL,
            MIN DOUBLE PRECISION NULL,
            MAX DOUBLE PRECISION NULL,
            MEAN DOUBLE PRECISION NULL,
            MISSINGVALUES BIGINT NULL,
            VARIANCE DOUBLE PRECISION NULL,
            STANDARDDEV DOUBLE PRECISION NULL,
            SUM DOUBLE PRECISION NULL,
            SKEWNESS DOUBLE PRECISION NULL,
            KURTOSIS DOUBLE PRECISION NULL,
            PERCENTILE25 DOUBLE PRECISION NULL,
            MEDIAN DOUBLE PRECISION NULL,
            PERCENTILE75 DOUBLE PRECISION NULL,
            COMETMETRIC VARCHAR(255) NOT NULL,
            JOBID VARCHAR(255) NOT NULL,
            DOMAIN VARCHAR(255) NOT NULL,
            SCHEMA VARCHAR(255) NOT NULL,
            COUNT BIGINT NOT NULL,
            TIMESTAMP BIGINT NOT NULL
        )
        """
      },
      discrete {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE VARCHAR(255) NOT NULL,
            COUNTDISTINCT BIGINT NULL,
            MISSINGVALUESDISCRETE BIGINT NULL,
            COMETMETRIC VARCHAR(255) NOT NULL,
            JOBID VARCHAR(255) NOT NULL,
            DOMAIN VARCHAR(255) NOT NULL,
            SCHEMA VARCHAR(255) NOT NULL,
            COUNT BIGINT NOT NULL,
            TIMESTAMP BIGINT NOT NULL
        )
        """
      }
    }
  }
  postgresql {
    tables = {
      extract {
        createSql = """CREATE TABLE IF NOT EXISTS SL_LAST_EXPORT (
                              DOMAIN VARCHAR(255) NOT NULL,
                              SCHEMA VARCHAR(255) NOT NULL,
                              LAST_TS TIMESTAMP,
                              LAST_DATE DATE,
                              LAST_LONG NUMERIC,
                              LAST_DECIMAL DECIMAL,
                              START_TS TIMESTAMP NOT NULL,
                              END_TS TIMESTAMP NOT NULL,
                              DURATION INTEGER NOT NULL,
                              MODE VARCHAR(255) NOT NULL,
                              COUNT BIGINT NOT NULL,
                              SUCCESS BOOLEAN NOT NULL,
                              MESSAGE VARCHAR(255) NOT NULL,
                              STEP VARCHAR(255) NOT NULL
                             )
    """
      },
      audit {
        selectSql = """
          SELECT
            '{{jobid}}' AS JOBID,
            '{{paths}}' AS PATHS,
            '{{domain}}' AS DOMAIN,
            '{{schema}}' AS SCHEMA,
            {{success}} AS SUCCESS,
            {{count}} AS COUNT,
            {{countAccepted}} AS COUNTACCEPTED,
            {{countRejected}} AS COUNTREJECTED,
            TO_TIMESTAMP('{{timestamp}}', 'YYYY-MM-DD HH24:MI:SS') AS TIMESTAMP,
            {{duration}} AS DURATION,
            '{{message}}' AS MESSAGE,
            '{{step}}' AS STEP,
            '{{database}}' AS DATABASE,
            '{{tenant}}' AS TENANT
        """
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                              JOBID VARCHAR(255) NOT NULL,
                              PATHS VARCHAR(255) NOT NULL,
                              DOMAIN VARCHAR(255) NOT NULL,
                              SCHEMA VARCHAR(255) NOT NULL,
                              SUCCESS BOOLEAN NOT NULL,
                              COUNT BIGINT NOT NULL,
                              COUNTACCEPTED BIGINT NOT NULL,
                              COUNTREJECTED BIGINT NOT NULL,
                              TIMESTAMP TIMESTAMP NOT NULL,
                              DURATION INTEGER NOT NULL,
                              MESSAGE VARCHAR(255) NOT NULL,
                              STEP VARCHAR(255) NOT NULL,
                              DATABASE VARCHAR(255) NULL,
                              TENANT VARCHAR(255) NULL
                             )
    """
      },
      expectations {
        selectSql = """
          SELECT
            '{{jobid}}' AS JOBID,
            '{{database}}' AS DATABASE,
            '{{domain}}' AS DOMAIN,
            '{{schema}}' AS SCHEMA,
            TO_TIMESTAMP('{{timestamp}}', 'YYYY-MM-DD HH24:MI:SS') AS TIMESTAMP,
            '{{NAME}}' AS NAME,
            '{{PARAMS}}' AS PARAMS,
            '{{SQL}}' AS SQL,
            {{count}} AS COUNT,
            '{{EXCEPTION}}' AS EXCEPTION,
            {{success}} AS SUCCESS
        """
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                            JOBID VARCHAR(255) NOT NULL,
                            DATABASE VARCHAR(255) NULL,
                            DOMAIN VARCHAR(255) NOT NULL,
                            SCHEMA VARCHAR(255) NOT NULL,
                            TIMESTAMP TIMESTAMP NOT NULL,
                            NAME VARCHAR(255) NOT NULL,
                            PARAMS VARCHAR(255) NOT NULL,
                            SQL VARCHAR(255) NOT NULL,
                            COUNT BIGINT NOT NULL,
                            EXCEPTION VARCHAR(255) NOT NULL,
                            SUCCESS BOOLEAN NOT NULL
                          )
        """
      },
      rejected {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                              JOBID VARCHAR(255) NOT NULL,
                              TIMESTAMP TIMESTAMP NOT NULL,
                              DOMAIN VARCHAR(255) NOT NULL,
                              SCHEMA VARCHAR(255) NOT NULL,
                              ERROR VARCHAR(255) NOT NULL,
                              PATH VARCHAR(255) NOT NULL
                             )
    """
      },
      frequencies {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE VARCHAR(255) NOT NULL,
            CATEGORY TEXT NULL,
            COUNT BIGINT NOT NULL,
            FREQUENCY DOUBLE PRECISION NULL,
            JOBID VARCHAR(255) NOT NULL,
            DOMAIN VARCHAR(255) NOT NULL,
            SCHEMA VARCHAR(255) NOT NULL,
            TIMESTAMP BIGINT NOT NULL
        )
        """
      },
      continuous {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE VARCHAR(255) NOT NULL,
            MIN DOUBLE PRECISION NULL,
            MAX DOUBLE PRECISION NULL,
            MEAN DOUBLE PRECISION NULL,
            MISSINGVALUES BIGINT NULL,
            VARIANCE DOUBLE PRECISION NULL,
            STANDARDDEV DOUBLE PRECISION NULL,
            SUM DOUBLE PRECISION NULL,
            SKEWNESS DOUBLE PRECISION NULL,
            KURTOSIS DOUBLE PRECISION NULL,
            PERCENTILE25 DOUBLE PRECISION NULL,
            MEDIAN DOUBLE PRECISION NULL,
            PERCENTILE75 DOUBLE PRECISION NULL,
            COMETMETRIC VARCHAR(255) NOT NULL,
            JOBID VARCHAR(255) NOT NULL,
            DOMAIN VARCHAR(255) NOT NULL,
            SCHEMA VARCHAR(255) NOT NULL,
            COUNT BIGINT NOT NULL,
            TIMESTAMP BIGINT NOT NULL
        )
        """
      },
      discrete {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE VARCHAR(255) NOT NULL,
            COUNTDISTINCT BIGINT NULL,
            MISSINGVALUESDISCRETE BIGINT NULL,
            COMETMETRIC VARCHAR(255) NOT NULL,
            JOBID VARCHAR(255) NOT NULL,
            DOMAIN VARCHAR(255) NOT NULL,
            SCHEMA VARCHAR(255) NOT NULL,
            COUNT BIGINT NOT NULL,
            TIMESTAMP BIGINT NOT NULL
        )
        """
      }
    }
  }
  mssql {
    tables = {
      extract {
        createSql = """CREATE TABLE IF NOT EXISTS SL_LAST_EXPORT (
                              DOMAIN NVARCHAR(4000) NOT NULL,
                              SCHEMA NVARCHAR(4000) NOT NULL,
                              LAST_TS DATETIME,
                              LAST_DATE DATE,
                              LAST_LONG INT,
                              LAST_DECIMAL DECIMAL,
                              START_TS DATETIME NOT NULL,
                              END_TS DATETIME NOT NULL,
                              DURATION INT NOT NULL,
                              MODE NVARCHAR(4000) NOT NULL,
                              COUNT INT NOT NULL,
                              SUCCESS TINYINT NOT NULL,
                              MESSAGE NVARCHAR(4000) NOT NULL,
                              STEP NVARCHAR(4000) NOT NULL
                             )
    """
      },
      audit {
        selectSql = """
          SELECT
            '{{jobid}}' AS JOBID,
            '{{paths}}' AS PATHS,
            '{{domain}}' AS DOMAIN,
            '{{schema}}' AS SCHEMA,
            {{success}} AS SUCCESS,
            {{count}} AS COUNT,
            {{countAccepted}} AS COUNTACCEPTED,
            {{countRejected}} AS COUNTREJECTED,
            TO_TIMESTAMP('{{timestamp}}') AS TIMESTAMP,
            {{duration}} AS DURATION,
            '{{message}}' AS MESSAGE,
            '{{step}}' AS STEP,
            '{{database}}' AS DATABASE,
            '{{tenant}}' AS TENANT
        """
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                              JOBID NVARCHAR(255) NOT NULL,
                              PATHS NVARCHAR(255) NOT NULL,
                              DOMAIN NVARCHAR(255) NOT NULL,
                              SCHEMA NVARCHAR(255) NOT NULL,
                              SUCCESS TINYINT NOT NULL,
                              COUNT INT NOT NULL,
                              COUNTACCEPTED INT NOT NULL,
                              COUNTREJECTED INT NOT NULL,
                              TIMESTAMP DATETIME NOT NULL,
                              DURATION INT NOT NULL,
                              MESSAGE NVARCHAR(255) NOT NULL,
                              STEP NVARCHAR(255) NOT NULL,
                              DATABASE NVARCHAR(255) NULL,
                              TENANT NVARCHAR(255) NULL
                             )
    """
      },
      expectations {
        selectSql = """
          SELECT
            '{{jobid}}' AS JOBID,
            '{{database}}' AS DATABASE,
            '{{domain}}' AS DOMAIN,
            '{{schema}}' AS SCHEMA,
            TO_TIMESTAMP('{{timestamp}}') AS TIMESTAMP,
            '{{NAME}}' AS NAME,
            '{{PARAMS}}' AS PARAMS,
            '{{SQL}}' AS SQL,
            {{count}} AS COUNT,
            '{{EXCEPTION}}' AS EXCEPTION,
            {{success}} AS SUCCESS
        """
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                            JOBID VARCHAR(255) NOT NULL,
                            DATABASE VARCHAR(255) NULL,
                            DOMAIN VARCHAR(255) NOT NULL,
                            SCHEMA VARCHAR(255) NOT NULL,
                            TIMESTAMP TIMESTAMP NOT NULL,
                            NAME VARCHAR(255) NOT NULL,
                            PARAMS VARCHAR(255) NOT NULL,
                            SQL VARCHAR(255) NOT NULL,
                            COUNT BIGINT NOT NULL,
                            EXCEPTION VARCHAR(255) NOT NULL,
                            SUCCESS BOOLEAN NOT NULL
                          )
        """
      },
      rejected {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
                              JOBID NVARCHAR(255) NOT NULL,
                              TIMESTAMP DATETIME NOT NULL,
                              DOMAIN NVARCHAR(255) NOT NULL,
                              SCHEMA NVARCHAR(255) NOT NULL,
                              ERROR NVARCHAR(255) NOT NULL,
                              PATH NVARCHAR(255) NOT NULL
                             )
    """
      },
      frequencies {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE NVARCHAR(255) NOT NULL,
            CATEGORY NTEXT NULL,
            COUNT INT NOT NULL,
            FREQUENCY DOUBLE NULL,
            JOBID NVARCHAR(255) NOT NULL,
            DOMAIN NVARCHAR(255) NOT NULL,
            SCHEMA NVARCHAR(255) NOT NULL,
            TIMESTAMP INT NOT NULL
        )
        """
      },
      continuous {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE NVARCHAR(255) NOT NULL,
            MIN DOUBLE NULL,
            MAX DOUBLE NULL,
            MEAN DOUBLE NULL,
            MISSINGVALUES INT NULL,
            VARIANCE DOUBLE NULL,
            STANDARDDEV DOUBLE NULL,
            SUM DOUBLE NULL,
            SKEWNESS DOUBLE NULL,
            KURTOSIS DOUBLE NULL,
            PERCENTILE25 DOUBLE NULL,
            MEDIAN DOUBLE NULL,
            PERCENTILE75 DOUBLE NULL,
            COMETMETRIC NVARCHAR(255) NOT NULL,
            JOBID NVARCHAR(255) NOT NULL,
            DOMAIN NVARCHAR(255) NOT NULL,
            SCHEMA NVARCHAR(255) NOT NULL,
            COUNT INT NOT NULL,
            TIMESTAMP INT NOT NULL
        )
        """
      },
      discrete {
        createSql = """CREATE TABLE IF NOT EXISTS {{table}} (
            ATTRIBUTE NVARCHAR(255) NOT NULL,
            COUNTDISTINCT INT NULL,
            MISSINGVALUESDISCRETE BIGINT NULL,
            COMETMETRIC NVARCHAR(255) NOT NULL,
            JOBID NVARCHAR(255) NOT NULL,
            DOMAIN NVARCHAR(255) NOT NULL,
            SCHEMA NVARCHAR(255) NOT NULL,
            COUNT INT NOT NULL,
            TIMESTAMP INT NOT NULL
        )
        """
      }
    }
  }
}
