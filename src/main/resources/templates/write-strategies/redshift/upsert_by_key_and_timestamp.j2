
{% macro renderStrategyKeyJoinCondition(table1, table2, columnNames) %}
{% for columnName in columnNames %}{{table1}}.{{ columnName }} = {{table2}}.{{ columnName }}{% if not loop.last %} AND {% endif %}{%endfor%}
{% endmacro %}



{% if strategyOn == 'TARGET' %}

CREATE  TEMPORARY TABLE SL_INCOMING AS {{selectStatement }};


SELECT DISTINCT {{ strategyKeyCsv }}
FROM {{ tableFullName }} AS SL_EXISTING INNER JOIN SL_INCOMING 
ON {{ strategyKeyJoinCondition }};
WHERE
    SL_INCOMING.{{ strategyTimestamp }} >= SL_EXISTING.{{ strategyTimestamp }};


MERGE INTO  {{ tableFullName }}
USING SL_INCOMING
ON ({{ renderStrategyKeyJoinCondition(tableFullName, 'SL_INCOMING', quotedStrategyKey) }})
WHEN MATCHED THEN  {{ tableUpdate }}
WHEN NOT MATCHED THEN {{ tableInsert }};


MERGE INTO  {{ tableFullName }} SL_EXISTING USING ({{ selectStatement }}) SL_INCOMING ON ( {{ strategyKeyJoinCondition }})
WHEN MATCHED AND SL_INCOMING.{{ strategyTimestamp }} > SL_EXISTING.{{ strategyTimestamp }} THEN  {{ tableUpdate }}
WHEN NOT MATCHED THEN {{ tableInsert }}

{% else %} {# strategyOn == 'SOURCE_AND_TARGET' #}

MERGE INTO  {{ tableFullName }} SL_EXISTING 
USING (
SELECT  {{ tableColumnsCsv }}
FROM (
SELECT  {{ tableColumnsCsv }}, ROW_NUMBER() OVER (PARTITION BY {{ strategyKeyCsv }}  ORDER BY {{ strategyTimestamp }} DESC) AS SL_SEQ
FROM ({{ selectStatement }})
) WHERE SL_SEQ = 1
    
) SL_INCOMING 
ON ( {{ strategyKeyJoinCondition }})
WHEN MATCHED AND SL_INCOMING.{{ strategyTimestamp }} > SL_EXISTING.{{ strategyTimestamp }} THEN  {{ tableUpdate }}
WHEN NOT MATCHED THEN {{ tableInsert }}

{%  endif %}
